---
type NavTab = 'case-study' | 'client' | 'project' | 'writing';

type Nav = {
  activeTabs: NavTab[];
}

const { 
  activeTabs = ['case-study', 'client', 'project', 'writing'],
} = Astro.props;

const filters = {
  "case-study": "blue",
  "client": "red",
  "project": "#65bf4e",
  "writing": "#F5C000",
};
---
<nav class="fixed top-0 left-0 right-0 flex justify-between md:hidden gap-3 z-50 p-3 pt-2">
  <div class="flex items-center gap-1.5">
    <a href="/" class="uppercase col-span-6">MKCG</a>  
    /
    <a href="/info" class="uppercase col-span-6 justify-self-end">Info</a>
  </div>
  <div class="relative">
    <button id="filter-dropdown-button" class={`relative pr-[11px] group flex items-center justify-between gap-1 capitalize font-medium`}>
      <div class="flex">
        {(activeTabs.length === 4 ? Object.keys(filters) : activeTabs).map((name: NavTab) => (
          <span 
            class="shrink-0 border border-box h-[6px] w-[6px] rounded-full group-hover:bg-neutral-200  -ml-0.5 first:ml-0" 
            style={{ 
              backgroundColor: filters[name],
              borderColor: "white",
            }}
          ></span>
        ))}
      </div>
      {activeTabs.length === 4 ? "Everything" : activeTabs.join(', ')}
      <svg class="absolute -right-1" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg>
    </button>
    <ul id="filter-dropdown-menu" class="hidden flex-col absolute w-28 -right-0 top-4 border py-1 p-1.5 bg-white shadow-sm">
      {Object.entries(filters).map(([name, color]) => (
        <li>
          <a 
            href={`/?filter=${name}`} 
            class={`group relative flex items-center  gap-1 capitalize hover:bg-transparent`}
          >
            <span 
              class="border border-white rounded-full h-[6px] w-[6px] mt-px -ml-px"
              style={{ 
                backgroundColor: color,
              }}
            ></span>
            {name.replace('-', ' ')}
          </a>
        </li>
      ))}
    </ul>
  </div>
</nav>
<nav class="hidden md:flex flex-col justify-between  gap-3 md:w-[84px] md:h-[calc(100vh-24px)] md:fixed top-3 left-3 ">
  <div class="flex flex-col gap-3">
    <a href="/" class="uppercase">MKCG</a>
    <ul>
      {Object.entries(filters).map(([name, color]) => (
        <li>
          <a 
            href={`/?filter=${name}`} 
            class={`group relative flex items-center justify-between gap-1 capitalize hover:bg-transparent`}
          >
            {name.replace('-', ' ')}
            <span 
              class={`
                group-hover:block group-focus:block border border-white rounded-full h-[6px] w-[6px] mt-px -mr-px
                ${activeTabs.includes(name) ? 'block' : 'hidden'}
              `}
              style={{ 
                backgroundColor: color
              }}
            ></span>
          </a>
        </li>
      ))}
    </ul>
  </div>
  <a href="/info" class="uppercase">Info</a>
</nav>

<script>
  const filterDropdownButton = document.querySelector('#filter-dropdown-button') as HTMLButtonElement;  
  const filterDropdownMenu = document.querySelector('#filter-dropdown-menu') as HTMLOListElement;  

  filterDropdownButton.addEventListener('click', () => {
    filterDropdownMenu.classList.toggle('hidden');
  });

  window.addEventListener('click', (event) => {
    if (!filterDropdownButton.contains(event.target as Node) && !filterDropdownMenu.contains(event.target as Node)) {
      filterDropdownMenu.classList.add('hidden');
    }
  });
</script>