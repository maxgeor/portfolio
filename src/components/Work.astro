---
import RightArrowIcon from './icons/RightArrowIcon.astro';
import UpRightArrowIcon from './icons/UpRightArrowIcon.astro';
import ScrollingBanner from './ScrollingBanner.astro'

type Roles = {
  long: string[],
  short: string[];
}

type Work = {
  title: string;
  description: string;
  roles: Roles;
  link?: {
    href: string;
    target?: '_blank' | '_self';
  };
  year: string;
  image: string;
  type: string;
  studySlug?: string;
  isPrivate?: boolean;
  isComingSoon?: boolean;
  classes?: string;
}

const { 
  title, 
  description, 
  type,
  image,
  year,
  link = {
    href: null,
    target: '_blank',
  },
  roles,
  studySlug,
  isPrivate = false,
  classes = '',
  isComingSoon = false,
} = Astro.props;

const filters = {
  "case-study": "blue",
  "client": "red",
  "project": "#65bf4e",
  "writing": "#F5C000",
};

const Element = isComingSoon ? 'div' : 'a';
const props = 
  isComingSoon || isPrivate
    ? {} 
    : studySlug 
      ? { href: `study/${studySlug}`, target: '_self' } 
      : link 
---
<Element
  {...props}
  class={`
    relative group col-span-full sm:col-span-4 md:col-span-3 hover:bg-transparent
    ${isComingSoon || isPrivate ? 'cursor-not-allowed' : 'cursor-pointer'}
    ${classes}
  `}
>
  <div class={`overflow-hidden ${isComingSoon || isPrivate ? 'text-gray-800/40  hover:text-gray-800' : ''}`}>
    <div>
      <div class="flex justify-between">
        <h2 class="uppercase shrink-0 whitespace-nowrap">
          {title}
        </h2>
        <div class="relative flex items-center gap-[3px] ">
          <div class="flex">
            {studySlug ? (
              <span 
                class="shrink-0 border border-white rounded-full h-[6px] w-[6px]"
                style={`background-color: ${filters["case-study"]}`}
              ></span>
            ) : null}
            {type === "client" ? (
              <span 
                class="shrink-0 border border-white rounded-full h-[6px] w-[6px] -ml-0.5 first:m-0"
                style={`background-color: ${filters["client"]}`}
              ></span>
            ) : null}
            {type === "project" ? (
              <span 
                class="shrink-0 border border-white rounded-full h-[6px] w-[6px] -ml-0.5 first:m-0"
                style={`background-color: ${filters["project"]}`}
              ></span>
            ) : null}
          </div>
          <span>
            {isPrivate ? (
              "Private"
            ) : isComingSoon ? (
              "Coming Soon"
            ) : studySlug ? (
              <RightArrowIcon size='tiny' classes="opacity-75 group-hover:translate-x-px" />
            ) : (
              <UpRightArrowIcon size='tiny' classes="opacity-75 group-hover:-translate-y-px group-hover:translate-x-px" />
            )}
          </span>
        </div>
      </div>
      <p>{description}</p>
      <p>{roles.long.join(', ')}</p>
      <p class="capitalize">{type}</p>
      <p>{year}</p>
    </div>
    <picture id="work-pic" class={`relative h-auto  opacity-0 group-hover:opacity-100`}>
      <img
        src={image}
        alt={`Preview mockup of ${title}`}
        class={`
          w-full h-full object-top select-none object-contain 
        `}
      />
      {isComingSoon && <ScrollingBanner title='Coming Soon' classes="-rotate-[12deg]" />}
      {isPrivate && <ScrollingBanner title='Private' classes="-rotate-[12deg]" />}
    </picture> 
    <!-- {(isPrivate || isComingSoon) && (
      <div class="h-3 hidden group-hover:flex items-center justify-center group-focus:block">
        <ScrollingBanner title={ isPrivate ? 'Private' : 'Coming Soon'} classes="text-gray-800 opacity-1" />
      </div>
    )} -->
  </div>
</Element>