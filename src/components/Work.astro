---
import NoEyeIcon from './icons/NoEyeIcon.astro';
import RightArrowIcon from './icons/RightArrowIcon.astro';
import UpRightArrowIcon from './icons/UpRightArrowIcon.astro';
import ScrollingBanner from './ScrollingBanner.astro'

type Roles = {
  long: string[],
  short: string[];
}

type Work = {
  title: string;
  description: string;
  roles: Roles;
  link?: {
    href: string;
    target?: '_blank' | '_self';
  };
  year?: string;
  image?: string;
  hasBorder?: boolean;
  type?: string;
  studySlug?: string;
  isPrivate?: boolean;
  isComingSoon?: boolean;
  classes?: string;
  index?: number;
}

type WorkCard = {
  variant: 'card';
  image: string;
  hasBorder?: boolean
} & Work;

type WorkRow = {
  variant: 'row';
  type: string;
  year: string;
} & Work;

export type Props = WorkCard | WorkRow;

const { 
  title, 
  description, 
  variant,
  type,
  image,
  year,
  link = {
    href: null,
    target: '_blank',
  },
  roles,
  studySlug,
  isPrivate = false,
  classes = '',
  isComingSoon = false,
  index
} = Astro.props;

const Element = isComingSoon ? 'div' : 'a';
const props = 
  isComingSoon || isPrivate
    ? {} 
    : studySlug 
      ? { href: `study/${studySlug}`, target: '_self' } 
      : link 

const NoEyeIconClasses = `inline-block shrink-0 mr-[4px] -mt-[3px]`;
const rightArrowIconClasses = `inline-block shrink-0 -mt-px mr-[4px] -ml-px`;
const upRightArrowIconClasses = `inline-block shrink-0 -mt-px -ml-px mr-[4px]`;
---

{variant === 'card' ? (
  <Element
    {...props}
    class={`
      group overflow-hidden block group relative gap-x-3 h-fit py-1  active:scale-[99.5%]
      ${!(isComingSoon || isPrivate) && 'px-1 -mx-1 transition duration-75 hover:bg-[#f0f0f0]'}
      ${isComingSoon || isPrivate ? 'cursor-not-allowed' : props.target === '_blank' ? 'cursor-alias' : 'cursor-pointer'}
      ${classes} 
    `}
  >
    <div class={`
      flex justify-between
    `}>
      <h3 aria-label={`${title} ${isComingSoon ? '(coming soon)' : ''}`}>{title}<sup class="">W{index}</sup> </h3>
      <span class="-mr-1.5 -ml-0.5">
        {(isPrivate || isComingSoon) ? (
          null
        ) : studySlug ? (
          <RightArrowIcon classes={rightArrowIconClasses} />
        ) : (
          <UpRightArrowIcon classes={upRightArrowIconClasses} />
        )}
      </span>
    </div>
    <picture id="work-pic" class={`relative h-auto with-border`}>
      <img
        src={image}
        alt={`Preview mockup of ${title}`}
        class={`
          w-full h-full object-top select-none object-contain 
        `}
      />
      {isComingSoon && <ScrollingBanner title='Coming Soon' classes="-rotate-[12deg]" />}
      {isPrivate && <ScrollingBanner title='Private' classes="-rotate-[12deg]" />}
    </picture>
  </Element>
) : (
  <Element
    {...props}
    class={`
      relative group col-span-6 md:col-span-3 xl:col-span-3 border-transparent
      ${isComingSoon || isPrivate ? 'cursor-not-allowed' : props.target === '_blank' ? 'cursor-alias' : 'cursor-pointer'}
      ${classes}
    `}
  >
  {/* <Element
    {...props}
    class={`
      relative  group col-span-full
      ${isComingSoon || isPrivate ? 'cursor-not-allowed' : props.target === '_blank' ? 'cursor-alias' : 'cursor-pointer'}
      ${classes}
    `}
  > */}
    <div class={`
      ${isComingSoon ? 'text-black/40  hover:text-black' : ''}
      ${isComingSoon || isPrivate ? '' : 'hover:bg-[#eee] transition duration-75 '}
    `}>
      <div class={`
        flex flex-col
        ${isComingSoon || isPrivate ? 'group-hover:hidden group-focus:hidden' : ''}
      `}>
      {/* <div class={`
        grid grid-cols-12 gap-x-3
        ${isComingSoon || isPrivate ? 'group-hover:hidden group-focus:hidden' : ''}
      `}> */}
        <div class="flex justify-between">
          <div class="uppercase shrink-0 whitespace-nowrap col-span-3 md:col-span-2 h-fit">
            {/* {title}<sup>W{index}</sup> */}
            {title}
            
          </div>
          <span class="">
            {isPrivate ? (
              "Private"
              // <NoEyeIcon classes={NoEyeIconClasses} />
            ) : studySlug ? (
              "More"
              // <RightArrowIcon classes={rightArrowIconClasses} />
            ) : (
              "See"
              // <UpRightArrowIcon classes={upRightArrowIconClasses} />
            )}
          </span>
        </div>
        <p class=" inline-block text-right xs:text-left col-span-7 md:col-span-3  truncate -mr-3 xs:mr-0">
          {description}
        </p>
        <div class="hidden md:flex col-span-full sm:col-span-3 ">
          <span>{roles.long.join(', ')}</span>
        </div>
        <div class="hidden md:inline-block col-span-2 capitalize">
          {type}
        </div>
        <div class="flex gap-3 col-span-1 justify-self-end ">
          <span class="hidden xs:inline-block">{year}</span>
          {/* <span class="-mr-1.5 -ml-0.5">
            {isPrivate ? (
              <NoEyeIcon classes={NoEyeIconClasses} />
            ) : studySlug ? (
              <RightArrowIcon classes={rightArrowIconClasses} />
            ) : (
              <UpRightArrowIcon classes={upRightArrowIconClasses} />
            )}
          </span> */}
        </div>
      </div>
      <picture id="work-pic" class={`relative h-auto with-border opacity-0 hover:opacity-100`}>
        <img
          src={image}
          alt={`Preview mockup of ${title}`}
          class={`
            w-full h-full object-top select-none object-contain 
          `}
        />
        {isComingSoon && <ScrollingBanner title='Coming Soon' classes="-rotate-[12deg]" />}
        {isPrivate && <ScrollingBanner title='Private' classes="-rotate-[12deg]" />}
      </picture>
      {(isPrivate || isComingSoon) && (
        <div class="h-3 hidden group-hover:flex items-center justify-center group-focus:block">
          <ScrollingBanner title={ isPrivate ? 'Private' : 'Coming Soon'} classes="text-black opacity-1" />
        </div>
      )}
    </div>
  </Element>
)}

<style>
  .with-border::after {
    box-shadow: inset 0 0 0 1px RGBA(0,0,0,0.04);
    content: '';
    display: block;
    height: 100%;
    position: absolute;
    top: 0;
    width: 100%;
  }
</style>