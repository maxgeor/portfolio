---
import PauseIcon from "../icons/PauseIcon.astro";
import { stripExtension } from "../../utils/formatting";

export interface Props {
  src: string;
  gridClasses?: string;
  classes?: string;
}
const { src, gridClasses = "", classes = "" } = Astro.props;

const extensionlessSrc = stripExtension(src);
---

<div class=`relative ${gridClasses}`>
  <video
    class={`
      transition duration-[250ms] ease-out aspect-[7/4] object-cover w-full select-none
      ${classes}
    `}
    poster={extensionlessSrc + ".png"}
    playsinline
    autoplay
    muted
    loop
  >
    <source
      src={extensionlessSrc + "-small.mp4"}
      type="video/mp4"
      media="all and (max-width: 480px)"
    />
    <source
      src={extensionlessSrc + "-small.webm"}
      type="video/webm"
      media="all and (max-width: 480px)"
    />
    <source src={extensionlessSrc + ".mp4"} type="video/mp4" />
    <source src={extensionlessSrc + ".webm"} type="video/webm" />
  </video>
  <PauseIcon
    classes="pause-icon transform opacity-0 -rotate-[24deg] -translate-x-5 z-10 absolute top-4 left-[13px] transition-all duration-200 ease-in-out text-white pointer-events-none drop-shadow"
  />
</div>

<script>
  const isMobileOrTablet = () =>
    /Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(
      navigator.userAgent
    );

  document.querySelectorAll("video")?.forEach((video) => {
    let isFrozen = false;

    const pauseIcon = video.parentElement?.querySelector(
      ".pause-icon"
    ) as HTMLElement;

    const pauseVideo = () => {
      video.pause();
      video.classList.add("brightness-75");
      pauseIcon.classList.remove(
        "opacity-0",
        "-rotate-[24deg]",
        "-translate-x-5"
      );
    };

    const playVideo = () => {
      video.play();
      video.classList.remove("brightness-75", "ease-in-out");
      pauseIcon.classList.add(
        "ease-in",
        "opacity-0",
        "rotate-[12deg]",
        "-translate-x-5"
      );

      setTimeout(() => {
        pauseIcon.classList.remove("ease-in", "rotate-[12deg]");
        pauseIcon.classList.add("-rotate-[24deg]", "ease-in-out");
      }, 200);
    };

    video.addEventListener("mouseover", () => {
      if (isFrozen || isMobileOrTablet()) return;

      pauseVideo();
    });

    video.addEventListener("mouseout", () => {
      if (isFrozen || isMobileOrTablet()) return;

      playVideo();
    });

    video.addEventListener("click", () => {
      if (video.paused) {
        isFrozen = false;
        playVideo();
      } else {
        isFrozen = true;
        pauseVideo();
      }
    });
  });
</script>
