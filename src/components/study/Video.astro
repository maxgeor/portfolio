---
import type { ResponsiveNumber, ResponsiveBool } from '../../utils/class-generator'
import { getColClasses, getResponsiveBoolClasses } from '../../utils/class-generator'
import { stripExtension } from "../../utils/formatting";
import Caption from './Caption.astro';
import clsx from 'clsx';

export interface Props {
  src: string;
  alt: string;
  id: string;
  description?: string;
  span?: ResponsiveNumber;
  start?: ResponsiveNumber;
  end?: ResponsiveNumber;
  fullBleed?: ResponsiveBool;
  hasBorder?: boolean;
  hasCaption?: boolean;
  orientation?: 'vertical' | 'horizontal';
  classes?: string;
}

const {
  src, 
  alt,
  id,
  span = 12,
  start,
  end,
  fullBleed = false,
  description = "",
  hasBorder = false,
  hasCaption = true,
  orientation = 'horizontal',
  classes = "" 
} = Astro.props;

const extensionlessSrc = stripExtension(src);

const { spanClasses, startClasses, endClasses } = getColClasses(span, start, end);
const { bleedClasses, paddingClasses } = getResponsiveBoolClasses(fullBleed);

---
<div class={clsx(
  "flex flex-col gap-x-4 gap-y-2 h-fit",
  spanClasses,
  startClasses,
  endClasses,
  bleedClasses,
  classes
)}>
  <video
    class={`
      object-cover w-full select-none self-center 
      ${orientation === 'vertical' ? 'aspect-[3/4]' : 'aspect-[7/4]'}
      ${hasBorder ? 'border border-neutral-300 dark:border-neutral-700' : ''}
    `}
    poster={extensionlessSrc + ".png"}
    playsinline
    autoplay
    muted
    loop
  >
    <source src={extensionlessSrc + ".mp4"} type="video/mp4" />
  </video>
  <div class={clsx(
    hasCaption || description ? 'flex flex-col gap-4' : 'hidden',
    paddingClasses
  )}>
    {hasCaption && <Caption id={id} text={alt} classes='-my-0.5' />}
    {description && <p class="col-span-full -my-0.5">{description}</p>}
  </div>
</div>
