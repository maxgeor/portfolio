---
import type { ResponsiveNumber, ResponsiveBool } from '../../utils/class-generator'
import { getCenteredColClasses, getPaddingClasses } from '../../utils/class-generator'
import { stripExtension } from "../../utils/formatting";
import Caption from './Caption.astro';
import clsx from 'clsx';

export interface Props {
  src: string;
  alt: string;
  id: string;
  description?: string;
  hasCaption?: boolean;
  span?: ResponsiveNumber;
  isPadded?: ResponsiveBool;
  hasBorder?: ResponsiveBool;
  orientation?: 'vertical' | 'horizontal' | '3/2';
  fit?: 'contain' | 'cover';
  classes?: string;
}

const {
  src, 
  alt,
  id,
  span = 12,
  hasBorder = false,
  isPadded = true,
  hasCaption = true,
  orientation = 'horizontal',
  fit = 'contain',
  classes = "" 
} = Astro.props;

const extensionlessSrc = stripExtension(src);

const objectFit = fit === 'contain' ? 'object-contain' : 'object-cover';

const paddingClasses = getPaddingClasses(isPadded);
const { spanClasses, startClasses, endClasses } = getCenteredColClasses(span);

let aspectRatio;

switch(orientation) {
  case 'horizontal':
    aspectRatio = 'aspect-[7/4]';
    break;
  case 'vertical':
    aspectRatio = 'aspect-[3/4]';
    break;
  case '3/2':
    aspectRatio = 'aspect-[3/2]';
    break;
  default:
    aspectRatio = 'aspect-[7/4]';
}
---
<div class={clsx('flex flex-col gap-y-2 col-span-full', classes)}>
  <div class={clsx(
    "grid grid-cols-12 gap-x-4 gap-y-4 relative h-fit bg-neutral-200 dark:bg-neutral-900 border-y-[0.5px] border-neutral-200 dark:border-neutral-900 lg:px-2 -mx-2 col-span-full",
    paddingClasses
  )}>
    <div class={clsx(
      "flex flex-col gap-x-4 gap-y-2 h-fit",
      spanClasses,
      startClasses,
      endClasses,
    )}>
      <video
        class={clsx('w-full select-none self-center', aspectRatio, objectFit)}
        poster={extensionlessSrc + ".png"}
        playsinline
        autoplay
        muted
        loop
      >
        <source src={extensionlessSrc + ".mp4"} type="video/mp4" />
      </video>
    </div>
  </div>
  <div class={clsx(
    'grid grid-cols-12 gap-4', 
    spanClasses,
    startClasses,
    endClasses,
  )}>
    <div class={clsx(
      "flex justify-between gap-4 -my-0.5",
      hasCaption || Astro.slots.has('description') ? 'col-span-full lg:col-span-2' : 'col-span-full '
    )}>
      {hasCaption && <Caption id={id} text={alt} />}
    </div>
    {Astro.slots.has('description') && (
      <div class="col-span-full md:col-span-9 lg:col-span-6 xl:col-span-4 -my-0.5">
        <slot name="description" />
      </div>
    )}
  </div>
</div>
