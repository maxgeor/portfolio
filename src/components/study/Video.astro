---
import type { GridSpan } from '../../utils/class-generator'
import { generateGridSpanClasses } from '../../utils/class-generator'
import { stripExtension } from "../../utils/formatting";

export interface Props {
  src: string;
  alt: string;
  span?: GridSpan;
  description?: string;
  hasBorder?: boolean;
  hasCaption?: boolean;
  orientation?: 'vertical' | 'horizontal';
  classes?: string;
}

const {
  src, 
  alt,
  span = 12,
  description = "",
  hasBorder = false,
  hasCaption = true,
  orientation = 'horizontal',
  classes = "" 
} = Astro.props;

const extensionlessSrc = stripExtension(src);
const gridClasses = generateGridSpanClasses(span);

---
<div class={`flex flex-col gap-10 h-fit ${gridClasses} ${classes}`}>
  {hasCaption && <p>{alt}</p>}
  <div class={`
    relative overflow-visible
    ${orientation === 'vertical' ? 'aspect-[2/3]' : 'aspect-[7/4]'}
  `}>
    <video
      class={`
       object-cover w-full select-none self-center 
        ${orientation === 'vertical' ? 'aspect-[2/3]' : 'aspect-[7/4]'}
      `}
      poster={extensionlessSrc + ".png"}
      playsinline
      autoplay
      muted
      loop
    >
      <source src={extensionlessSrc + ".mp4"} type="video/mp4" />
    </video>
  </div>
  {description && <p>{description}</p>}
</div>
