---
import type { Cols, FullBleed } from '../../utils/class-generator'
import { getColClasses, getFullBleedClasses } from '../../utils/class-generator'
import clsx from 'clsx';

export interface Props {
  src: string;
  alt: string;
  span?: Cols;
  start?: Cols;
  end?: Cols;
  description?: string;
  hasCaption?: boolean;
  hasBorder?: boolean;
  orientation?: 'horizontal' | 'vertical';
  fullBleed?: FullBleed;
  classes?: string;
}

const { 
  src, 
  alt,
  span = 16,
  start,
  end,
  hasCaption = true,
  description = '',
  orientation = 'horizontal',
  fullBleed = false,
  hasBorder = false,
  classes = ""
} = Astro.props;

const { spanClasses, startClasses, endClasses } = getColClasses(span, start, end);
const { bleedClasses, paddingClasses } = getFullBleedClasses(fullBleed);
---
<div class={clsx(
  "flex flex-col gap-1 h-fit",
  orientation === 'vertical' ? 'aspect-[2/3]' : 'aspect-[7/4]',
  spanClasses,
  startClasses,
  endClasses,
  bleedClasses,
  classes
)}>
  <figure class={`
    image relative
    ${orientation === 'vertical' ? 'aspect-[4/7]' : 'aspect-[7/4]'},
    ${hasBorder ? 'border border-black dark:border-neutral-300' : ''}
  `}>
    <img
      src={src}
      alt={alt}
      class={`
        h-full w-full object-cover bg-neutral-400 dark:bg-[#212121]
        select-none self-center
        ${orientation === 'vertical' ? 'aspect-[3/4]' : 'aspect-[7/4]'}
      `}
    />
  </figure>
  <div class={clsx(
    hasCaption || description ? 'flex flex-col gap-2' : 'hidden',
    paddingClasses
  )}>
    {hasCaption && <p class="col-span-full">{alt}</p>}
    {description && <p class="col-span-full">{description}</p>}
  </div>
</div>