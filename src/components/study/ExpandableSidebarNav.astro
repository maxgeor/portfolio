---
import NavList from './NavList.astro';

export interface Props {
  sections: {
    title: string;
    subsections?: {
      title: string;
    }[];
  }[];
  classes?: string;
}

const { sections, classes = '' } = Astro.props;
---
<nav
  id="expandable-sidebar-nav"
  class={`
    group flex flex-col overflow-scroll col-span-full scroll-smooth md:col-span-2 z-50 opacity-0 focus-within:opacity-100 focus-within:pointer-events-default transition-all ease-in-out 
    ${classes}
  `}
>
  <ol 
    id="expandable-sidebar-nav-markers"
    class='fixed top-1/2 right-0 transform -translate-y-1/2 justify-self-end pl-10 w-fit flex flex-col gap-y-3 transition-all'
  >
    {sections.map(() => <span class="h-0.5 w-2 bg-neutral-600"></span>)}
  </ol>
  <NavList 
    sections={sections} 
    id="expandable-sidebar-nav-list"
    classes="fixed top-1/2 left-0 md:left-auto md:right-0 transform -translate-y-1/2 opacity-0 pointer-events-none border-l border-white/10 transition-all ease-in-out py-9 p-12 bg-black z-50 h-[100dvh]"
  />
</nav>

<style>
  /* #expandable-sidebar-nav > #expandable-sidebar-nav-markers:not(.open) {
    transform: scale(1.01) translateX(-2px);
    pointer-events: none;
    opacity: 0;
  }

  #expandable-sidebar-nav > #expandable-sidebar-nav-list.open {
    pointer-events: auto;
    opacity: 1;
    transform: translateX(0);
    transform: scale(1);
  } */
</style>

<script>
  const nav = document.querySelector('#expandable-sidebar-nav');
  const navMarkers = nav?.querySelector('#expandable-sidebar-nav-markers');
  const navList = nav?.querySelector('#expandable-sidebar-nav-list');

  const shouldShowNav = () => {
    window.scrollY >= 300 
      ? nav?.classList.remove('opacity-0', 'pointer-events-none')
      : nav?.classList.add('opacity-0', 'pointer-events-none');
  }

  const showNavList = () => {
    navMarkers?.classList.remove('open');
    navList?.classList.add('open');
  }
  
  const hideNavList = () => {
    navMarkers?.classList.add('open');
    navList?.classList.remove('open');
  }

  document.addEventListener('DOMContentLoaded', () => shouldShowNav());
  window.addEventListener('scroll', () => shouldShowNav());

  window.addEventListener('keydown', (e) => (
    e.key === 'Escape' && hideNavList()
  ));

  navMarkers?.addEventListener('click', () => showNavList());
  navMarkers?.addEventListener('mouseenter', () => showNavList());

  // window.addEventListener('click', (e) => {
  //   if (e.target !== navMarkers) hideNavList();
  // });
  
  navList?.addEventListener('focusin', () => showNavList());
  navList?.addEventListener('focusout', () => hideNavList());
  navList?.addEventListener('mouseleave', () => hideNavList());
</script>
