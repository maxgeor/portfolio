---
export interface Props {
  title: string;
  classes?: string;
}

const { title, classes = "" } = Astro.props;
---
<span class={`relative inline whitespace-nowrap ${classes}`}>
  {title.split('').map(((character, index) => 
    <span 
      class={`wave-letter ${character === " " ? "w-[0.25em]" : ""}`} 
      style={`animation-delay: ${index * 0.1}s;`}
    >
      {character}
    </span>
  ))}
  <span 
    class="sparkle h-[1px] w-[1px]"
    style={`
      animation-delay: 0.25s;
      bottom: ${Math.floor(Math.random() * 5) - 1}px;
      left: ${Math.floor(Math.random() * 26) - 2}px;
    `} 
  ></span>
  <span 
    class="sparkle h-[2px] w-[2px]"
    style={`
      animation-delay: 0.5s;
      top: ${Math.floor(Math.random() * 5) - 1}px;
      left: ${Math.floor(Math.random() * 26) - 2}px;
    `} 
  ></span>
  <span 
    class="sparkle h-[1px] w-[1px]"
    style={`
      animation-delay: 0.75s;
      top: ${Math.floor(Math.random() * 5) - 1}px;
      right: ${Math.floor(Math.random() * 26) - 2}px;
    `} 
  ></span>
  <span 
    class="sparkle h-[1px] w-[1px]"
    style={`
      animation-delay: 1s;
      top: ${Math.floor(Math.random() * 5) - 1}px;
      right: ${Math.floor(Math.random() * 26) - 2}px;
    `} 
  ></span>
  <span 
    class="sparkle h-[2px] w-[2px]"
    style={`
      animation-delay: 1.25s;
      bottom: ${Math.floor(Math.random() * 5) - 1}px;
      right: ${Math.floor(Math.random() * 26) - 2}px;
    `} 
  ></span>
    </span>

<style>
  @keyframes do-the-wave {
    0%, 100% { transform: translateY(0); color: #e4e4e4; }
    25%      { transform: translateY(-0.025em); color: #b1b1b1; }
    50%      { transform: translateY(0.025em); color: #e4e4e4; }
    75%      { transform: translateY(-0.025em); color: #b1b1b1; }
  }


  @keyframes twinkle {
    0%, 100% { 
      opacity: 0; 
      transform: scale(0.8);
    }
    50% { 
      opacity: 1; 
      transform: scale3d(1);
    }
    180% {
      opacity: 1; 
      transform: scale3d(1);
    }
  }

  @keyframes spin {
    from { transform: translate(-50%, -50%) rotate(0deg); }
    to   { transform: translate(-50%, -50%) rotate(360deg); }
  }

  .wave-letter {
    display: inline-block;
    animation: do-the-wave 2.1s ease-in-out infinite;
    will-change: transform, opacity, color;
  }

  .sparkle {
    opacity: 0;
    background-color: #ccc;
    position: absolute;
    animation: twinkle 2s infinite ease-out, spin 3s linear infinite;
  }
</style>