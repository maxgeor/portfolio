---
import NavList from "./NavList.astro";
import { toUrlSafeKebabCase } from "../../../utils/formatting";

export interface Props {
  title: string;
  subsections?: {
    title: string;
    subsections?: {
      title: string;
    }[];
  }[];
  isSubitem?: boolean;
}
const { title, subsections = null, isSubitem = false } = Astro.props;
---

<li
  class={`nav-item relative lg:text-xs ${
    isSubitem ? "sub-item text-xs leading-4 py-0.5" : "leading-5"
  }`}
>
  <a
    href={`#${toUrlSafeKebabCase(title)}`}
    class="flex items-center justify-between gap-2 text-gray-500 transition hover:underline focus:underline dark:text-neutral-500 lg:m-0"
  >
    {title}
    {
      subsections && (
        <div class="dots flex gap-[3px] transition">
          {subsections.map(() => (
            <span class="h-0.5 w-0.5 rounded-full bg-gray-400 dark:bg-neutral-600" />
          ))}
        </div>
      )
    }
  </a>
  {subsections && <NavList sections={subsections} isSubsection={true} />}
</li>

<style is:inline>
  @media (min-width: 1024px) {
    li.nav-item.active > ol {
      display: flex;
      pointer-events: all;
      opacity: 1;
      transform: translateY(0);
      height: auto;
    }

    li.nav-item.active > a {
      font-weight: 500;
      color: #3f434c;
    }

    .dark li.nav-item.active > a {
      color: #d0d0d0;
    }

    li.nav-item.sub-item.active > a {
      font-weight: 400;
      color: #030712;
    }
    
    .dark li.nav-item.sub-item.active > a {
      font-weight: 400;
      color: #dddddd;
    }

    li.nav-item.active > a > .dots {
      opacity: 0%;
    }
  }
</style>
