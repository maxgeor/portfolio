---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Work from "../components/Work.astro";
import Study from "../components/Study.astro";
import { 
  getEntry,
  getCollection
} from 'astro:content';

const works = await getCollection('work', ({ 
  data: { hasStudy, isDraft } 
}) => (
  !hasStudy && !isDraft
));
const studies = await getCollection('study', ({ data: { isDraft } }) => !isDraft);

const studiesWithWorkData = await Promise.all(studies.map(async (study) => {
  const { work, roles, year, isComingSoon, order } = study.data;
  const { data: { title, image, description, link } } = await getEntry('work', work.id);
  return { 
    slug: study.slug,
    title, 
    image,
    description,
    roles, 
    year,
    order,
    link,
    isComingSoon
  };
}));
---

<Layout title="Max Georgopoulos">
  <div class=" relative grid grid-cols-6 gap-x-4 p-4 pt-0">
    <Header/>

    <a class="uppercase py-1 col-span-full grid grid-cols-12 gap-4 ">
      <p class="col-span-3">Case Study</p>
      <p class="col-span-4">Description</p>
      <p class="col-span-4">Roles</p>
      <p>Year</p>
    </a>
    {studiesWithWorkData?.sort((a, b) => a.order - b.order).map((study) => (
      <a class="border-t-[0.5px] border-dashed border-[#333] py-1 col-span-full grid grid-cols-12 gap-4 ">
        <p class="col-span-3">{study.title}</p>
        <p class="col-span-4">{study.description}</p>
        <p class="col-span-4">{study.roles.long.join(', ')}</p>
        <p>{study.year}</p>
        
      </a>
    ))}
    <div class="col-span-full columns-1 md:columns-2 gap-x-4 space-y-4">
      {works
        .sort((a, b) => a.data.order - b.data.order)
        .map(work => (
        <Work
          title={work.data.title}
          link={work.data.link}
          image={work.data.image}
          description={work.data.description}
          isComingSoon={work.data.isComingSoon}
        />
      ))}
    </div>
  </div>
</Layout>
