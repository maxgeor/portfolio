---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Work from "../components/Work.astro";
import Writing from "../components/Writing.astro";
import Study from "../components/Study.astro";
import { 
  getEntry,
  getCollection
} from 'astro:content';

const works = await getCollection('work', ({ 
  data: { hasStudy, isDraft } 
}) => (
  !hasStudy || !isDraft
));
const studies = await getCollection('study', ({ data: { isDraft } }) => !isDraft);
const writings = await getCollection('writing', ({ data: { isDraft } }) => !isDraft);

const studiesWithWorkData = await Promise.all(studies.map(async (study) => {
  const { work, roles, year, isComingSoon } = study.data;
  const { data: { title, image, description } } = await getEntry('work', work.id);
  return { 
    slug: study.slug,
    title, 
    image,
    description,
    roles, 
    year,
    isComingSoon
  };
}));
---

<Layout title="Max Georgopoulos">
  <div class="relative grid grid-cols-4 gap-6 px-4 sm:px-6">
    <Header />
    {studiesWithWorkData?.map((study) => (
      <Study
        title={study.title}
        description={study.description}
        image={study.image}
        roles={study.roles}
        year={study.year}
        link={{ href: `/study/${study.slug}` }}
        isComingSoon={study.isComingSoon}
      />
    ))}
    <h2 class="col-span-full border-t border-[#DADADA] dark:border-neutral-700 -mb-1">
      Work
    </h2>
    <div class="col-span-full columns-1 md:columns-2 gap-6 space-y-5 lg:space-y-6">
      {works.map(work => (
        <Work
          title={work.data.title}
          link={work.data.link}
          image={work.data.image}
          description={work.data.description}
          isComingSoon={work.data.isComingSoon}
        />
      ))}
    </div>
    <h2 class="col-span-full border-t border-[#DADADA] dark:border-neutral-700 -mb-2">
      Writing
    </h2>
    <div id="writings" class="col-span-full grid grid-cols-2 md:grid-cols-4 gap-x-6">
      {writings?.sort((a, b) => {
        const dateA: any = new Date(a.data.date);
        const dateB: any = new Date(b.data.date);
        return dateB - dateA;
      }).map(writing => (
        <Writing
          title={writing.data.title}
          href={`/writing/${writing.slug}`}
          date={writing.data.date}
        />
      ))}
    </div>
    </div>
  </div>
</Layout>
