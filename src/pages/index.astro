---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Work from "../components/Work.astro";
import { getCollection } from 'astro:content';
import DancingLetters from "../components/DancingLetters.astro";

const works = await getCollection('work', ({ data: { isDraft } }) => !isDraft);
---
<Layout title="Max Georgopoulos" maxWidth={null}>
  <div class="col-span-full relative grid grid-cols-12 gap-4">
    <div class="pb-8 -mt-12 -mx-4 px-4 bg-center bg-[url(/cloud.gif)] col-span-full h-[61vh] max-h-[500px]  relative grid grid-cols-12 gap-4 overflow-visible ">
      <Header classes="border-t pt-0.5 -mt-[3px]  border-black/[40%] " />
      <h1 class="-ml-[0.5vw] z-0 absolute mt-6 top-1/2 -translate-y-1/2 left-1/2 -translate-x-1/2 leading-[364px] border-black font-london tracking-tighter  text-[38vw] xl:text-[456px] text-white">MKCG</h1>
      <!-- <div class="sm:h-full z-1 col-span-4 sm:col-span-2  border-x border-black/[30%]"></div>
      <div class="sm:h-full z-0 col-span-4 sm:col-span-2  border-x border-black/[30%]"></div>
      <div class="sm:h-full z-1 hidden sm:block col-span-2  border-x border-black/[30%]"></div>
      <div class="sm:h-full  z-0 hidden sm:block col-span-2 border-x border-black/[30%]"></div>
      <div class="sm:h-full z-1 hidden sm:block col-span-2  border-x border-black/[30%]"></div>
      <div class="sm:h-full z-1 sm:z-0 col-span-4 sm:col-span-2  border-x border-black/[30%]"></div> -->
    </div>
    <div class="my-4  grid grid-cols-12 col-span-full gap-x-4 ">
      {works?.sort((a, b) => (a.data.order - b.data.order)).map(({ data: work }, index) => (
        <Work variant="row" {...work} index={index} />
      ))}
    </div>
    <div class="columns-1 sm:columns-2 md:columns-3 col-span-full  space-y-2 gap-x-4">
      {works?.sort((a, b) => a.data.order - b.data.order).map(({ data: work }, index) => (
        <Work variant="card" {...work} index={index} />
      ))}
    </div>
  </div>
</Layout>

<style>
  @keyframes rotateText {
  from {
    transform: rotate3d(0deg);
  }
  to {
    transform: rotate3d(0, 1, 0, 4rad);
  }
}

.rotating-text {
  display: inline-block;
  animation: rotateText 4s linear infinite;
}

</style>