---
import SpeedInsights from "@vercel/speed-insights/astro"

export interface Props {
  title?: string;
  description?: string;
  offset?: string;
  smoothScroll?: boolean;
  classes?: string;
}

const {
  title = "Max Georgopoulos",
  description,
  offset = 'pt-[50px]',
  smoothScroll = true,
  classes = '',
} = Astro.props;

const DEFAULT_THEME = 'light';

const criticalCSS = `
  :root {
    --background-color: #fff;
    --text-color: #000;
    --highlight-color: #eaeaea;
  }
  :root.dark {
    --background-color: #000;
    --text-color: #fff;
    --highlight-color: #323232;
  }
  body {
    background-color: var(--background-color);
    color: var(--text-color);
    transition: background-color 0.3s ease, color 0.3s ease;
  }
`;

const inlineScript = `
  (function() {
    function getTheme() {
      return localStorage.getItem('theme') || '${DEFAULT_THEME}';
    }
    var theme = getTheme();
    document.documentElement.classList.toggle('dark', theme === 'dark');
    window.localStorage.setItem('theme', theme);
  })();
`;
---

<!DOCTYPE html>
<html lang="en" class={smoothScroll ? 'scroll-smooth' : ''}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description || "Designer & developer"} />
    <style set:html={criticalCSS}></style>
    <script set:html={inlineScript}></script>
  </head>
  <body
    style="text-rendering: optimizeLegibility;"
    class={`grid grid-cols-12 relative min-h-screen text-[12px] leading-[16px] p-2 gap-x-4 gap-y-8 ${offset} ${classes}`}
  >
    <slot />
    <div class="hidden">
      <SpeedInsights />
    </div>
  </body>
</html>

<style is:global>  
  @font-face {
    font-family: "Berkeley Mono";
    src: url(/fonts/BerkeleyMono-Regular.ttf);
  }

  :root {
    --nav-width: 75px;  
    --nav-offset: calc(var(--nav-width) + (15px * 2));
    --aside-width: calc((100vw - var(--nav-width) - 15px) / 4);
    --accent-color: #23FF27;
  }

  ::selection {
    background-color: var(--accent-color);
    color: black;
  }

  ::-moz-selection { /* Code for Firefox */
    background-color: var(--accent-color);
    color: black;
  }

  html {
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
  }
  
  a {
    text-underline-offset: 2px;
  }

  a:focus-visible, button:focus-visible, summary:focus-visible {
    outline: solid 2px var(--accent-color);
    outline-offset: 1px;
    text-decoration: none;
  }
  
  @media (min-width: 1024px) {
    a:hover, button:hover, summary:hover {
      opacity: 0.5;
      text-decoration: none;
    }
  }

  button {
    text-align: left;
  }

  tr:last-child > td {
    padding-bottom: 0;
  }

  td {
    vertical-align: top;
  }

  del {
    text-decoration-thickness: 0.08em;
  }

  .light-border::after {
    box-shadow: inset 0 0 0 1px RGBA(255,255,255,0.09);
    content: '';
    display: block;
    height: 100%;
    position: absolute;
    top: 0;
    width: 100%;
  }

  .dark-border::after {
    box-shadow: inset 0 0 0 1px RGBA(0,0,0,0.09);
    content: '';
    display: block;
    height: 100%;
    position: absolute;
    top: 0;
    width: 100%;
  }

  .text-balance {
    text-wrap: balance;
  }
</style>