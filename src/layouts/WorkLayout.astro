---
import Layout from "./Layout.astro";
import DetailsTable from "../components/work/DetailsTable.astro";
const { frontmatter } = Astro.props;
const {
  type,
  title,
  roles,
  year,
  link,
  image,
  tools,
  collaborators,
  titleTightness = 'normal'
} = frontmatter;
---
<Layout title={title}>
  <div class="grid px-5 gap-5">
    <nav class="col-span-full grid grid-cols-12">
      <aside class="col-span-full flex justify-center py-5">
        <a href="/" class="font-bodoni uppercase text-xl -my-1.5">MG</a>
      </aside>
      <div class="col-span-full pt-3 border-t-[0.5px] border-black border-box">
        <div class="flex gap-2 -my-1.5">
          <a href="/" class="hover:underline ">Work</a>
          <span>/</span>
          <p class="opacity-40">{title}</p>
        </div>
      </div>
    </nav>
    <main class="col-span-full grid grid-cols-12">
      <section class="col-span-full grid grid-cols-12">
        <h1 class={`
          ${titleTightness === 'tight' ? 'tracking-[-0.21em]' : null}
          font-bodoni text-[#222] uppercase tracking-[-0.063em] text-7xl lg:text-8xl lg:text-9xl -my-2 lg:-my-2.5 -ml-0.5
          col-span-full
        `}>
          {title}
        </h1>
        <div class="col-span-full">
          <DetailsTable
            type={type}
            roles={roles}
            year={year}
            tools={tools}
            link={link}
            collaborators={collaborators}
          />
        </div>
      </section>
      <article id="content" class="col-span-full">
        <div class={`
          prose ml-0 text-black 
          prose-headings:font-medium prose-headings:tracking-tight
          prose-li:marker:text-neutral-500 prose-li:marker:text-opacity-50
        `}>
          <slot />
        </div>
      </article>
    </main>
  </div>
</Layout>

<script>
  const content = document.getElementById('content');
  const details = document.getElementById('details');

  const targetPosition = 200;

  function isTriggerElementVisible() {
    const rect = content.getBoundingClientRect();
    return (rect.top <= targetPosition) && ((rect.top + rect.height) >= targetPosition);
  }

  function changeTextColorOnScroll() {
    if (isTriggerElementVisible()) {
      details.style.opacity = '30%';
    } else {
      details.style.opacity = '100%';
    }
  }

  window.addEventListener('scroll', changeTextColorOnScroll);
</script>
