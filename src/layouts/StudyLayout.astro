---
import Layout from "./Layout.astro";
import ExternalLinkArrow from "../components/icons/ExternalLinkArrow.astro";
import { Code } from "astro:components";

const { frontmatter } = Astro.props;
const {
  title,
  type,
  tldr,
  description,
  roles,
  year,
  link,
  image,
  tools,
  teammates,
} = frontmatter;
---

<Layout title={title} description={description}>
  <div class="-my-1 sticky top-[36px] grid grid-cols-6 col-span-full gap-x-2 z-10">
    <hr class="-mx-2 px-2 border-black dark:border-neutral-300 col-span-full -mb-px" />
    <h1 class="col-start-3 text-[92px] font-serif leading-[92px] uppercase ">{title} <sup class="md:hidden">{year}</sup></h1>
    <p class="hidden md:block uppercase col-span-1">{year}</p>
    <p class="uppercase col-span-2 md:col-span-1 ">{type}</p>
    <p class="uppercase col-span-2 md:col-span-1 whitespace-nowrap ">{roles.join('/')}</p>
    <p>{teammates.map((teammate) => (
      <span><a href={teammate.href} class="underline">{teammate.name}</a> ({teammate.role})</span>
    ))}</p>
    <!-- {link ? (
      <a href={link} class="col-span-1 flex justify-end -mr-1">
        <span class="uppercase ">See</span>
        <ExternalLinkArrow />
      </a>
    ) : '—'} -->
    <hr class="-mx-2 px-2 border-black dark:border-neutral-300 col-span-full -mb-px" />
  </div>
  <div class="col-span-full grid grid-cols-6 gap-2">
    <!-- <div class="md:order-last flex  gap-2 col-span-full md:col-span-4 ">
      <div class="w-full h-full border border-black dark:border-neutral-300">
        <img src={image} alt={title} class=" w-full h-full object-contain " />
      </div>
    </div> -->
    <!-- <p class="col-span-1 -my-1">
      PROBLEM
      <br />
      Universal UI for smart contracts, which was featured as a top product by Milk Road, addresses the problem of Etherscan's subpar frontend by offering an Airtable Forms-like solution for smart contract actions. 
    </p>
    <p class="col-span-1 -my-1">
      SOLUTION
      <br />
      The product focuses on simplicity and user trust by implementing a one-page, one-action approach, requiring users to confirm trust explicitly, and supporting only one-way actions. 
    </p>
    <p class="col-span-1 -my-1">
      DECISIONS <sup>4</sup>
      <br />
      However, this approach comes with trade-offs, including the inability to edit actions and limiting customization to titles and descriptions only. This streamlined design aims to provide a more user-friendly interface for interacting with smart contracts compared to existing solutions.
    </p>
    <p class="col-span-1 -my-1">
      TRADEOFFS <sup>3</sup>
      <br />
      However, this approach comes with trade-offs, including the inability to edit actions and limiting customization to titles and descriptions only. This streamlined design aims to provide a more user-friendly interface for interacting with smart contracts compared to existing solutions.
    </p> -->
    <div class="col-span-full md:col-span-2  grid grid-cols-2 gap-x-2 gap-y-6 [&>*]:h-fit">
      <!-- <div class="md:order-last flex flex-col gap-2 col-span-full">
        <p class="hidden md:block uppercase -my-1">Images</p>
        <div class="flex flex-wrap gap-2">
          <div class="h-6 md:h-10 w-6 md:w-10 aspect-square border border-black dark:border-neutral-300"></div>
          <div class="h-6 md:h-10 w-6 md:w-10 aspect-square border border-black dark:border-neutral-300"></div>
          <div class="h-6 md:h-10 w-6 md:w-10 aspect-square border border-black dark:border-neutral-300"></div>
          <div class="h-6 md:h-10 w-6 md:w-10 aspect-square border border-black dark:border-neutral-300"></div>
        </div>
      </div> -->
      <!-- <p class="col-span-full">{description}</p> -->
      
      <!-- <div class="col-span-full -my-1">
        <p class="uppercase">Team</p>
        <ul>
          {teammates ? teammates.map((teammate: { name: string, role: string, href: string }) => (
            <p>
              <a href={teammate.href} class="underline">{teammate.name}</a> ({teammate.role})
            </p>  
          )) : "—"}
        </ul>
      </div> -->
    </div>
  </div>
  <!-- <div class="col-span-full w-full h-full border border-black dark:border-neutral-300">
    <img src={image} alt={title} class=" w-full h-full object-contain " />
  </div> -->
  <article
    id="article"
    class="pt-[48px] pb-[72px] w-full col-span-full overflow-visible scroll-mt-3 mx-auto"
  >
    <div
      class={`
        grid grid-cols-12 gap-x-2 gap-y-[48px] lg:gap-y-[72px]
        prose-a:underline prose-a:decoration-[0.07em] hover:prose-a:no-underline focus:prose-a:ring-2 focus:prose-a:ring-green
        prose-ul:list-disc prose-ul:max-w-prose prose-ul:pl-[18px] prose-ul:-my-0.5 
        prose-ol:list-inside prose-ol:list-decimal prose-ol:max-w-prose prose-ol:pl-[22px] prose-ol:-my-0.5
        prose-li:list-item
        prose-li:list-outside
        prose-li:pl-0.5
        prose-li:m-0
        prose-li:leading-3
        prose-figure:w-auto prose-figure:select-none prose-figure:my-0 
        prose-video:w-auto prose-video:select-none	prose-video:my-0 
        prose-td:p-0
      `}
    >
      <slot />
    </div>
  </article>
</Layout>

<style>
  #study-title {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    transform-style: preserve-3d;
    animation: spin 120s infinite 0s linear;
    z-index: 100;
    scale: 1
  }

  #study-title span {
    position: absolute;
    background-color: green;
    color: white;
    transition: all 1s;
  }

  @keyframes spin {
    0% {
      transform: rotateX(40deg) rotateY(0deg) ;
    }
    50% {
      transform: rotateX(80deg) rotateY(360deg) ;
    }
    100% {
      transform: rotateX(10deg) rotateY(0deg) ;
    }
  }
  /* @keyframes spin {
    0% {
      transform: rotateX(37deg) rotateY(123deg) rotateZ(45deg);
    }
    50% {
      transform: rotateX(82deg) rotateY(275deg) rotateZ(19deg);
    }
    100% {
      transform: rotateX(14deg) rotateY(93deg) rotateZ(27deg);
    }
  } */
</style>