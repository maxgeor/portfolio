---
import Link from "../components/Link.astro";
import Layout from "./Layout.astro";
import Header from "../components/Header.astro";
import Divider from "../components/Divider.astro";

const { frontmatter } = Astro.props;
const {
  title,
  type,
  tldr,
  description,
  roles,
  year,
  link,
  tools,
  teammates,
} = frontmatter;
---

<Layout title={title} description={description} maxWidth="max-w-none">
  <main class="relative col-span-full grid grid-cols-12 gap-y-8 gap-x-4">
    <Header />    
    <section id="hero" class=' col-span-full grid grid-cols-12 gap-4'>
      <div class="-mt-2 border-t border-black/80 col-span-full flex justify-between gap-4">
        <p class="col-span-full md:col-span-2">Work</p>
        <Link href={link.href} target="_blank">See it</Link>
      </div>
      <div class="h-[416px] relative flex items-center justify-center gap-4 col-span-full">
        <span class="relative col-span-full ">
          <h1 
            id="study-title" 
            class="-mt-4 font-bold flex items-center justify-center uppercase text-[37px] xs:leading-[28px] md:text-[46px] md:leading-[36px] 2xl:text-[66px] 2xl:leading-[54px] "
          >
            <span sr-only>{title}</span>
            {Array.from({ length: 30 }, (_, index) => (
              <span style={{ 
                transform: `translateZ(-${index}px)`, 
                padding: "0.5rem ",
              }}>
                {title}<sup class="w-fit align-super text-[14px] xs:text-[16px] md:text-[22px] 2xl:text-[30px]">W1</sup>
              </span>
            ))}
          </h1>
        </span>
      </div>
      <div class="grid grid-cols-12 gap-2 col-span-full border-t border-black/80 pt-1 ">
        <div class="grid grid-cols-12  col-span-full  gap-x-4">
          <p class="col-span-4 md:col-span-2 text-left">
            Tldr
          </p>
          <span class="col-span-8">
            <p class="col-span-full col-start-5 text-balance">{description}</p>
          </span>
        </div>
        <div class="jusitfy-self-start h-fit col-span-full  grid grid-cols-12  gap-x-4 ">
          <p class="text-left col-span-4 md:col-span-2 border-neutral-500">Year</p>
          <p class="col-span-8 ">{year}</p>
        </div>
        <div class="jusitfy-self-start h-fit col-span-full  grid grid-cols-12  gap-x-4 ">
          <p class="text-left col-span-4 md:col-span-2 border-neutral-500">Type</p>
          <p class="col-span-8 ">{type}</p>
        </div>
        <div class="jusitfy-self-start h-fit col-span-full  grid grid-cols-12  gap-x-4 ">
          <p class="text-left col-span-4 md:col-span-2 border-neutral-500">Roles</p>
          <p class="col-span-8 ">{roles?.join(', ')}</p>
        </div>
        <div class="col-span-full  grid grid-cols-12  gap-x-4 ">
          <p class="text-left col-span-4 md:col-span-2 border-neutral-500">Tools</p>
          <p class="col-span-8 ">{tools?.join(', ')}</p>
        </div>
        <div class="col-span-full  grid grid-cols-12  gap-x-4 ">
          <p class="text-left col-span-4 md:col-span-2 border-neutral-500">Team</p>
          <ul class="flex flex-col col-span-8">
            {teammates ? teammates.map((teammate: { name: string, role: string, href: string }) => (
              <li>
                <a href={teammate.href} class="underline">{teammate.name}</a> ({teammate.role})
              </li>
            )) : "—"}
          </ul>
        </div>
        <div class="grid grid-cols-12  gap-x-4 col-span-full ">
          <p class="text-left col-span-4 md:col-span-2">Problem</p>
          <p class="col-span-8 text-balance">{tldr?.problem || "—"}</p>
        </div>
        <div class="grid grid-cols-12  gap-x-4 col-span-full ">
          <p class="text-left col-span-4 md:col-span-2">Solution</p>
          <p class="col-span-8 text-balance">{tldr?.solution || "—"}</p>
        </div>
        <div class="grid grid-cols-12  gap-x-4 col-span-full ">
          <p class="text-left col-span-4 md:col-span-2">Decisions</p>
          <ul class="col-span-8 text-balance">
            {tldr?.decisions?.map((decision: string, index: number) => 
              <li>[<span class="tabular">{index + 1}</span>] {decision}</li>
            ) || "—"}
          </ul>
        </div>
        <div class="grid grid-cols-12  gap-x-4 col-span-full ">
          <p class="text-left col-span-4 md:col-span-2">Tradeoffs</p>
          <ul class="col-span-8 text-balance">
            {tldr?.tradeoffs?.map((tradeoff: string, index: number) => 
              <li>[<span class="tabular">{index + 1}</span>] {tradeoff}</li>
            ) || "—"}
          </ul>
        </div>
      </div>
    </section>
    <Divider classes="hidden md:block" />
    <article
      id="article"
      class="w-full mx-auto col-span-full overflow-visible scroll-mt-4 mt-4"
    >
      <div
        class={`
          prose-a:underline prose-a:decoration-[0.07em] hover:prose-a:no-underline hover:prose-a:bg-[#e1e1e1] focus:prose-a:ring-2 focus:prose-a:ring-green prose-a:px-1 prose-a:-mx-1 prose-a:transition prose-a:duration-75

          prose-ul:list-disc prose-ul:max-w-prose prose-ul:pl-[18px]
          prose-ul:-my-0.5 prose-ul:text-neutral-300

          prose-ol:list-inside prose-ol:list-decimal prose-ol:max-w-prose prose-ol:pl-[22px] prose-ol:-my-0.5 prose-ol:text-neutral-300

          prose-li:list-item
          prose-li:list-outside
          prose-li:pl-0.5
          prose-li:m-0
          prose-li:leading-4
          marker:prose-li:text-[11.5px]
          marker:prose-li:font-inter
          
          prose-figure:w-auto prose-figure:select-none prose-figure:my-0 
          prose-video:w-auto prose-video:select-none	prose-video:my-0 

          prose-td:p-0

          grid grid-cols-12 gap-x-4 gap-y-12
        `}
      >
        <slot />
      </div>
    </article>
    <footer class="col-span-full my-32 mb-64">
      <h2 class=" border-b border-black">Read more</h2>
    </footer>
  </main>
</Layout>

<style>
  #study-title {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    transform-style: preserve-3d;
    animation: spin 120s infinite 0s linear;
    z-index: 100;
    scale: 1
  }

  #study-title span {
    position: absolute;
    background-color: green;
    color: white;
    transition: all 1s;
  }

  @keyframes spin {
    0% {
      transform: rotateX(40deg) rotateY(0deg) ;
    }
    50% {
      transform: rotateX(80deg) rotateY(360deg) ;
    }
    100% {
      transform: rotateX(10deg) rotateY(0deg) ;
    }
  }
  /* @keyframes spin {
    0% {
      transform: rotateX(37deg) rotateY(123deg) rotateZ(45deg);
    }
    50% {
      transform: rotateX(82deg) rotateY(275deg) rotateZ(19deg);
    }
    100% {
      transform: rotateX(14deg) rotateY(93deg) rotateZ(27deg);
    }
  } */
</style>