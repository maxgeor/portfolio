---
import Layout from "./Layout.astro";
import Nav from "../components/Nav.astro";

const { frontmatter } = Astro.props;
const {
  title,
  type,
  tldr,
  description,
  roles,
  year,
  link,
  tools,
  teammates,
} = frontmatter;
---

<Layout title={title} description={description}>
  <Nav activeTabs={["case-study", type]} />
  <div class="relative col-span-full grid grid-cols-8 gap-y-[15px] gap-x-[15px] md:ml-[103px]"> 
    <aside id="hero" class='[&>div]:h-min grid grid-cols-2 lg:flex flex-col border-y md:border-t-0 md:border-l md:-ml-[15px] md:-mt-[15px] lg:m-0 lg:border-x lg:border-y-0 lg:fixed left-[103px] top-0 bottom-0 lg:w-[calc((100vw-104px-15px)/(8/2))] col-span-full lg:col-span-3 p-[15px] lg:pr-[14px] -m-[15px] -mt-[5px] lg:h-screen gap-[15px] 3xl:max-w-[320px]'>
      <div>
        <div class="flex justify-between gap-[15px] ">
          <p class="uppercase">{title}</p>
          {link.href && <a href={link.href} target="_blank">[See]</a>}
        </div>
        <p class="text-balance md:text-pretty">{description}</p>
        <p class="lg:hidden">{year}</p>
      </div>
      <div>
        <p class="uppercase">Roles</p>
        <p>{roles?.join(', ')}</p>
      </div>
      <div>
        <p class="uppercase">Team</p>
        <ul>
          {teammates ? teammates.map((teammate: { name: string, role: string, href: string }) => (
            <li>
              <a href={teammate.href} class="underline">{teammate.name}</a> ({teammate.role})
            </li>
          )) : "—"}
        </ul>
      </div>
      <div>
        <p class="uppercase">Tools</p>
        <p>{tools?.join(', ')}</p>
      </div>
      <div class="hidden lg:block">
        <p class="uppercase">Year</p>
        <p>{year}</p>
      </div>
      <hr class="col-span-full -mx-[15px]" />
      <div class="col-start-1 col-span-full md:col-span-1">
        <p class="uppercase">Problem</p>
        <p class="text-balance">{tldr?.problem || "—"}</p>
      </div>
      <div class="col-span-full md:col-span-1">
        <p class="uppercase">Solution</p>
        <p class="text-balance">{tldr?.solution || "—"}</p>
      </div>
      <div class="col-span-full md:col-span-1">
        <p class="uppercase">Decisions</p>
        <ul class="text-balance">
          {tldr?.decisions?.map((decision: string, index: number) => 
            <li>[<span>{index + 1}</span>] {decision}</li>
          ) || "—"}
        </ul>
      </div>
      <div class="col-span-full md:col-span-1">
        <p class="uppercase">Tradeoffs</p>
        <ul class="col-span-8 text-balance">
          {tldr?.tradeoffs?.map((tradeoff: string, index: number) => 
            <li>[<span>{index + 1}</span>] {tradeoff}</li>
          ) || "—"}
        </ul>
      </div>
    </aside>
    <article
      id="article"
      class="md:border-l md:-mx-[15px] md:-mb-[15px] lg:ml-0 md:pl-[15px] lg:pl-0 lg:border-0 pb-[84px] w-full col-span-full lg:col-span-6 lg:col-start-3 3xl:col-span-full 3xl:pl-[320px] 3xl:max-w-[1400px] 3xl:mx-auto overflow-visible scroll-mt-3 mx-auto "
    >
      <div
        class={`
          flex flex-col gap-x-[15px] gap-y-[25px]
          prose-a:underline prose-a:decoration-[0.07em] hover:prose-a:no-underline hover:prose-a:bg-[#e1e1e1] focus:prose-a:ring-2 focus:prose-a:ring-pink
          prose-ul:list-disc prose-ul:max-w-prose prose-ul:pl-[18px] prose-ul:-my-0.5 
          prose-ol:list-inside prose-ol:list-decimal prose-ol:max-w-prose prose-ol:pl-[22px] prose-ol:-my-0.5
          prose-li:list-item
          prose-li:list-outside
          prose-li:pl-0.5
          prose-li:m-0
          prose-li:leading-3
          marker:prose-li:text-[11.5px]
          marker:prose-li:font-inter
          prose-figure:w-auto prose-figure:select-none prose-figure:my-0 
          prose-video:w-auto prose-video:select-none	prose-video:my-0 
          prose-td:p-0
        `}
      >
        <slot />
      </div>
    </article>
    
  </div>
</Layout>

<style>
  #study-title {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    transform-style: preserve-3d;
    animation: spin 120s infinite 0s linear;
    z-index: 100;
    scale: 1
  }

  #study-title span {
    position: absolute;
    background-color: green;
    color: white;
    transition: all 1s;
  }

  @keyframes spin {
    0% {
      transform: rotateX(40deg) rotateY(0deg) ;
    }
    50% {
      transform: rotateX(80deg) rotateY(360deg) ;
    }
    100% {
      transform: rotateX(10deg) rotateY(0deg) ;
    }
  }
  /* @keyframes spin {
    0% {
      transform: rotateX(37deg) rotateY(123deg) rotateZ(45deg);
    }
    50% {
      transform: rotateX(82deg) rotateY(275deg) rotateZ(19deg);
    }
    100% {
      transform: rotateX(14deg) rotateY(93deg) rotateZ(27deg);
    }
  } */
</style>